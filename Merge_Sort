#  归并排序
def merge(A, p, q, r):  # 合并函数, A为数组, A[p...q], A[q+1...r]  注：r是最后一个元素的下标
    n1 = q - p + 1
    n2 = r - q
    L = []  # 左数组
    R = []  # 右数组
    for i in range(n1):
        L.append(A[p + i])  # 从A[p]开始到A[q]复制给L数组
    for i in range(n2):
        R.append(A[q + i + 1])  # 从A[q+1]开始到A[r]复制给R数组
    L.append(float("inf"))
    R.append(float("inf"))
    i = 0
    j = 0
    for k in range(p, r + 1):
        if L[i] <= R[j]:
            A[k] = L[i]
            i = i + 1
        else:
            A[k] = R[j]
            j = j + 1


def merge_sort(A, p, r):
    if p < r:
        q = (p + r) // 2
        merge_sort(A, p, q)
        merge_sort(A, q+1, r)
        merge(A, p, q, r)


A = [5, 2, 4, 6, 1, 3]
merge_sort(A, 0, len(A) - 1)  # 传最后一个元素的下标
print(A)
