#  插入排序  （非降序）
A = [5, 2, 4, 6, 1, 3]
j = 1
length = len(A)
for j in range(1, length):
    key = A[j]
    i = j - 1
    while i > -1 and A[i] > key:
        A[i+1] = A[i]
        i = i - 1
    A[i+1] = key
print(A)


# 插入排序  （非升序）
A = [5, 2, 4, 6, 1, 3]
j = 1
length = len(A)
for j in range(1, length):
    key = A[j]
    i = j - 1
    while i > -1 and A[i] < key:  # 只要改变这里即可
        A[i+1] = A[i]
        i = i - 1
    A[i+1] = key
print(A)



# 线性查找
A = [5, 2, 4, 6, 1, 3]
is_exist = False
v = int(input("请输入v："))
for i in A:
    if i == v:
        is_exist = True
        break
if is_exist:
    print("Get")
else:
    print("NIL")


# n位二进制数相加，输出结果
x = [int(i) for i in "11011001"]
y = [int(i) for i in "01101101"]
result = []
length = len(x)
carry = 0
for i in range(length - 1, -1, -1):
    temp = x[i] + y[i]
    if temp + carry == 2:
        carry = 1
        r = 0
    elif temp + carry == 3:
        carry = 1
        r = 1
    else:
        r = temp + carry
        carry = 0
    result.insert(0, r)
result.insert(0, carry)
print(result)


# 选择排序
A = [5, 2, 4, 6, 1, 3]
length = len(A)
for i in range(length-1):  # 只要到n-1即可，依次选择最小交换，那么最后剩下的一定是最大的
    min_key = A[i]
    for j in range(i+1, length):
        if A[j] < min_key:
            A[i] = A[j]
            A[j] = min_key
            min_key = A[i]
print(A)
